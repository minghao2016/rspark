FROM rocker/verse:3.6.3-ubuntu18.04
# Updated to rocker: R-3.6.3 Ubuntu-18.04
# Note: problems from keys (.asc) may have to do with switching from xenial to bionic.

MAINTAINER Jim Harner <ejharner@gmail.com>

ARG javaversion=1.8.0
ARG jdbcversion=42.2.2
ARG pgversion=9.6
ARG hadoopversion=2.9.2
ARG hiveversion=2.1.1
ARG sparkversion=2.4.6
ARG APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1

# ENV JAVA_HOME /usr/lib/jvm/default-java

# COPY postgresKey.asc openjdkKey.asc /tmp/
RUN apt-get update && apt-get install -y  apt-utils apt-transport-https ca-certificates wget dirmngr gnupg software-properties-common tzdata
RUN wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - && \
#	apt-key add /tmp/openjdkKey.asc && \
    add-apt-repository --yes 'deb http://apt.postgresql.org/pub/repos/apt/ bionic-pgdg main'
#    wget --quiet -O - https://adoptopenjdk.jfrog.io/adoptopenjdk/api/gpg/key/public | apt-key add - && \
#    add-apt-repository --yes https://adoptopenjdk.jfrog.io/adoptopenjdk/deb/
#    curl https://adoptopenjdk.jfrog.io/adoptopenjdk/deb/dists/bionic/Release
# add-apt-repository --yes https://adoptopenjdk.jfrog.io/adoptopenjdk/deb/
# apt-key add /tmp/postgresKey.asc && \

# Update machine and install
# RUN apt-get update && apt-get install -y --no-install-recommends apt-utils
# RUN apt-get autoremove -y default-jdk
RUN apt-get update && apt-get install --no-install-recommends -y postgresql-client-${pgversion} libicu-dev openjdk-8-jdk && apt-get clean && update-java-alternatives -s java-${javaversion}-openjdk-amd64
ENV JAVA_HOME /usr/lib/jvm/java-${javaversion}-openjdk-amd64
RUN JAVA_HOME=/usr/lib/jvm/java-${javaversion}-openjdk-amd64
RUN apt-get install -y scala
# Switch to rstudio CRAN mirror (untested)
# RUN R CMD options(repos = c(CRAN = "https://cran.rstudio.com"))
# Set environment variable for rJava package installation
ENV LD_LIBRARY_PATH $JAVA_HOME/jre/lib/amd64:$JAVA_HOME/jre/lib/amd64/server
# Update environmental variables.  R needs to know these changed in its configuration for it to affect package installation.
RUN R CMD javareconf

####################
# HADOOP
####################
# Download and Install Hadoop and set Hadoop environment variable
RUN cd /opt && wget --quiet http://archive.apache.org/dist/hadoop/core/hadoop-${hadoopversion}/hadoop-${hadoopversion}.tar.gz && \
	tar zxf hadoop-${hadoopversion}.tar.gz && \
	ln -s hadoop-${hadoopversion} hadoop && \
	rm hadoop-${hadoopversion}.tar.gz && \
	(cd /opt/hadoop; ln -s share/hadoop/tools/lib/hadoop-streaming-${hadoopversion}.jar hadoop-streaming.jar) && \
	chown -R rstudio:rstudio /opt/hadoop
ENV HADOOP_CMD=/opt/hadoop/bin/hadoop HADOOP_HOME=/opt/hadoop HADOOP_BIN=/opt/hadoop/bin HADOOP_CONF_DIR=/opt/hadoop/etc/hadoop
RUN HADOOP_CMD=/opt/hadoop/bin/hadoop HADOOP_HOME=/opt/hadoop HADOOP_BIN=/opt/hadoop/bin HADOOP_CONF_DIR=/opt/hadoop/etc/hadoop


####################
# HIVE
####################
RUN cd /opt && \
	wget --quiet http://archive.apache.org/dist/hive/hive-${hiveversion}/apache-hive-${hiveversion}-bin.tar.gz && \
	tar zxf apache-hive-${hiveversion}-bin.tar.gz && \
	ln -s apache-hive-${hiveversion}-bin hive && \
	ln -s /opt/hive/jdbc/hive-jdbc-${hiveversion}-standalone.jar /opt/hive/lib/ && \
	rm apache-hive-${hiveversion}-bin.tar.gz

####################
# SPARK
####################
RUN cd /opt && \
	wget --quiet http://archive.apache.org/dist/spark/spark-${sparkversion}/spark-${sparkversion}-bin-hadoop2.7.tgz && \
	tar zxf spark-${sparkversion}-bin-hadoop2.7.tgz && \
	mv spark-${sparkversion}-bin-hadoop2.7 spark && \
	cp spark/conf/spark-env.sh.template spark/conf/spark-env.sh && \
	echo "export SPARK_DIST_CLASSPATH=/opt/postgresql-${jdbcversion}.jar:$(/opt/hadoop/bin/hadoop classpath)" >> spark/conf/spark-env.sh

####################
# R PACKAGES
####################
# Switch to rstudio CRAN mirror (untested)
# RUN R CMD options(repos = c(CRAN = "https://cran.rstudio.com"))
# Set environment variable for rJava package installation
ENV LD_LIBRARY_PATH $JAVA_HOME/jre/lib/amd64:$JAVA_HOME/jre/lib/amd64/server
# Install R packages
RUN Rscript -e "install.packages(c(\"rjson\", \"functional\", \"R.methodsS3\", \"caTools\", \"RPostgreSQL\", \"RJDBC\", \"housingData\", \"gapminder\", \"glmnet\", \"trelliscopejs\", \"flexdashboard\", \"sparklyr\", \"reticulate\", \"tensorflow\"), repos = 'http://cran.rstudio.com')"

# Copy repository packages to filesystem
# ADD rhdfs.tar.gz rmr.tar.gz /tmp/pkgs/
# Install repository packages
# RUN cd /tmp/pkgs && R CMD INSTALL rhdfs rmr2

ADD archive/protobuf-2.5.0.tar.gz /tmp/
RUN cd /tmp/protobuf-2.5.0 && ./configure --prefix=/usr && make && make install && \
	cd .. 	&& rm -rf protobuf-*

ADD postgresql-${jdbcversion}.jar /opt

####################
# ENVIRONMENT CONFIG
####################
# Add necessary mods to Renviron file
ADD Renviron /usr/local/lib/R/etc/
ADD hdfs-site.xml core-site.xml log4j.properties /opt/hadoop/etc/hadoop/
# Create symlink to actual Rscript
RUN ln -s /usr/local/bin/Rscript /usr/bin/Rscript

# Add path to profile so commands are found if attach to the container
RUN echo "PATH='/opt/hadoop/bin:/opt/spark/bin:/opt/hive/bin:$PATH'" >> /etc/profile
ENV PATH="/opt/hadoop/bin:/opt/spark/bin:/opt/hive/bin:$PATH"
# USER rstudio
# Install rspark test files
# ADD rspark-tests.tar.gz /home/rstudio
RUN mkdir /home/rstudio/rspark-tests && \
git clone https://github.com/jharner/rspark-tests.git /tmp/foo && \
cd /tmp/foo && \
git archive master | tar -x -C /home/rstudio/rspark-tests  && \
cd && \
rm -rf /tmp/foo
RUN mkdir /home/rstudio/rspark-tutorial && \
git clone https://github.com/jharner/rspark-tutorial.git /tmp/foo && \
cd /tmp/foo && \
git archive master | tar -x -C /home/rstudio/rspark-tutorial  && \
cd && \
rm -rf /tmp/foo
RUN chown -R rstudio:rstudio /home/rstudio

# USER root
EXPOSE 8787
EXPOSE 4040
EXPOSE 4041

CMD ["/init"]


	
